
# application.properties er en konfigurationsfil i Spring Boot, som indeholder forskellige indstillinger for din
# applikation.
# Her er en forklaring af de forskellige linjer i filen:

# spring.datasource.url: Dette er URL'en til databasen, som applikationen vil bruge.
# I dette tilfælde er det en MySQL-database på localhost med navnet wishesdb og portnummeret 3306.
spring.datasource.url=jdbc:mysql://localhost:3306/wishesdb

# spring.datasource.username: Dette er brugernavnet, som applikationen vil bruge for at logge ind på databasen.
# I dette tilfælde er det root.
spring.datasource.username=root

# spring.datasource.password: Dette er adgangskoden, som applikationen vil bruge for at logge ind på databasen.
# I dette tilfælde er det @Trine2023dog@.
spring.datasource.password=@Trine2023dog@

# spring.jpa.hibernate.ddl-auto: Dette er en konfigurationsindstilling for Hibernate, som styrer, hvordan applikationen
# vil oprette og opdatere databasen, når applikationen starter.
# I dette tilfælde er den sat til update, som betyder, at Hibernate vil forsøge at opdatere databasen, hvis det er
# nødvendigt.
spring.jpa.hibernate.ddl-auto=update

# spring.jpa.properties.hibernate.show_sql: Dette er en konfigurationsindstilling for Hibernate, som afgør, om
# SQL-forespørgsler skal logges til konsollen.
# Hvis denne indstilling er sat til true, vil SQL-forespørgsler blive logget.
spring.jpa.properties.hibernate.show_sql=true

# server.port: Dette er den port, som applikationen vil køre på. I dette tilfælde er det 8080.
server.port=8080

# Samlet forklaring:
# Samlet set angiver application.properties de nødvendige indstillinger for at oprette forbindelse til og kommunikere
# med en MySQL-database, og for at konfigurere Hibernate til at oprette og opdatere databasen, når applikationen starter.
# Derudover er der også en konfigurationsindstilling til at logge SQL-forespørgsler og en indstilling til at definere
# den port, som applikationen skal køre på.
